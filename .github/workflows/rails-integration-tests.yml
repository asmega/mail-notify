name: Rails integration tests

on:
  pull_request:
  push:
    branches:
      - main

env:
  RAILS_VERSIONS: '["5.2.8.1", "6.1.7.6", "7.1.3.2"]'

jobs:
  set-matrix:
    runs-on: ubuntu-latest
    name: Set Rails versions
    outputs:
      RAILS_VERSIONS: ${{ env.RAILS_VERSIONS }}
    steps:
      - name: Compute outputs
        run: |
          echo "RAILS_VERSIONS=${{ env.RAILS_VERSIONS }}" >> $GITHUB_OUTPUT
  build-rails:
    strategy:
      fail-fast: false
      matrix:
        rails: ${{ fromJSON(needs.set-matrix.outputs.RAILS_VERSIONS) }}
    runs-on: ubuntu-latest
    name: Build and cache Docker containers
    needs: set-matrix
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and cache
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            RAILS_VERSION=${{ matrix.rails }}
            MAIL_NOTIFY_BRANCH=${{ github.ref }}
          push: false
          tags: mail-notify-integration-rails-${{ matrix.rails }}:latest
          outputs: type=docker, dest=/tmp/rails-${{ matrix.rails }}-image.tar
          cache-from: type=gha,scope=build-${{ matrix.rails }}
          cache-to: type=gha,mode=min,scope=build-${{ matrix.rails }}
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: rails-${{ matrix.rails }}-image
          path: /tmp/rails-${{ matrix.rails }}-image.tar
  mailer-previews:
    strategy:
      fail-fast: false
      matrix:
        rails: ${{ fromJSON(needs.set-matrix.outputs.RAILS_VERSIONS) }}
    runs-on: ubuntu-latest
    needs:
      - set-matrix
      - build-rails
    steps:
      - name: Download image
        uses: actions/download-artifact@v4
        with:
          name: rails-${{ matrix.rails }}-image
          path: /tmp
      - name: Load image
        run: docker load --input /tmp/rails-${{ matrix.rails }}-image.tar
      - name: Run integration tests
        env:
          NOTIFY_API_KEY: ${{ secrets.NOTIFY_API_KEY }}
        run: |
          docker run --rm -e "NOTIFY_API_KEY=$NOTIFY_API_KEY" \
          mail-notify-integration-rails-${{ matrix.rails }}:latest bin/rails test:system
  sending:
    strategy:
      fail-fast: false
      matrix:
        rails: ${{ fromJSON(needs.set-matrix.outputs.RAILS_VERSIONS) }}
    runs-on: ubuntu-latest
    needs:
      - set-matrix
      - build-rails
    steps:
      - name: Download image
        uses: actions/download-artifact@v4
        with:
          name: rails-${{ matrix.rails }}-image
          path: /tmp
      - name: Load image
        run: docker load --input /tmp/rails-${{ matrix.rails }}-image.tar
      - name: Run integration tests
        env:
          NOTIFY_API_KEY: ${{ secrets.NOTIFY_API_KEY }}
        run: |
          docker run --rm -e "NOTIFY_API_KEY=$NOTIFY_API_KEY" \
          mail-notify-integration-rails-${{ matrix.rails }}:latest bin/rails test
